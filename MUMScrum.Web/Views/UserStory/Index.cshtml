@model IEnumerable<MUMScrum.Model.Model.UserStory>
@using MUMScrum.Model.SessionModel;
@using MUMScrum.Model.ENUMS;
@{
    ViewBag.Title = "Index";
    var currentRole = SessionModel.LoginUser.RoleId;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@foreach (var item in Model)
{
    <div class="col-lg-4 col-md-3 col-sm-6 col-xs-12">
        <div class="dashboard-stat blue-madison">
            <div class="visual">
                <i class="fa fa-comments"></i>
            </div>
            <div class="details" >
                <div class="desc" style="float:right;width: 100%;">
                    @item.Name
                </div>
                <div class="desc" style="font-size:small; color:white; float:right;width: 100%;">
                    @item.Description
                </div>
                <div  class="desc" style="font-size:small; color:white; float:right;width: 100%;">
                    (@item.UserStoryType)
                </div>
                <div  class="desc" style="font-size:small; color:aqua; float:right;width: 100%;">
                    @if (SessionModel.LoginUser.RoleId == RoleEnum.Developer)
                    {
                        <span>Estimated Time: </span>@item.DeveloperEstimate

                    }
                    else
                    {
                        <span>Estimated Time: </span>@item.TesterEstimate
                    }
                </div>
            </div>
            @if (currentRole == RoleEnum.Developer)
            {
                <div>
                    <a class="more" href="/UserStory/DeveloperEstimateEffort?empId=@SessionModel.LoginUser.EmployeeId&userStoryId=@item.Id&effortType=@EmployeeEstimateENUM.DevEstimate">
                        Estimate Effort <i class="m-icon-swapright m-icon-white"></i>
                    </a>
                </div>
                <div>
                    <a class="more" href="/UserStory/DeveloperEstimateEffort?empId=@SessionModel.LoginUser.EmployeeId&userStoryId=@item.Id&effortType=@EmployeeEstimateENUM.DevEffort">
                        Update Work Effort <i class="m-icon-swapright m-icon-white"></i>
                    </a>
                </div>
            }
            @if (currentRole == RoleEnum.Tester)
            {
                <div>
                    <a class="more" href="/UserStory/DeveloperEstimateEffort?empId=@SessionModel.LoginUser.EmployeeId&userStoryId=@item.Id&effortType=@EmployeeEstimateENUM.TesterEstimate">
                        Estimate Effort <i class="m-icon-swapright m-icon-white"></i>
                    </a>
                </div>
                <div>
                    <a class="more" href="/UserStory/DeveloperEstimateEffort?empId=@SessionModel.LoginUser.EmployeeId&userStoryId=@item.Id&effortType=@EmployeeEstimateENUM.TesterEffort">
                        Update Work Effort <i class="m-icon-swapright m-icon-white"></i>
                    </a>
                </div>
            }
            <a class="more" href="/UserStory/Edit/@item.Id">
                Edit <i class="m-icon-swapright m-icon-white"></i>
            </a>          
        </div>        
    </div>
   
}
@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.project.Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserStoryType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.project.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserStoryType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            @if (SessionModel.LoginUser.RoleId == RoleEnum.Developer || SessionModel.LoginUser.RoleId == RoleEnum.Developer)
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            }
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
